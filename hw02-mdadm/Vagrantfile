# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :"hw02-mdadm" => {
        :box_name => "centos/7",
		:vm_name => "hw02-mdadm__otus-linux-spv",
        :cpus => 1,
        :memory => 1024,      
        :disks => {
            :sata1 => {
                :dfile => 'sata1.vdi',
                :size => 250, # Megabytes
                :port => 1
            },
            :sata2 => {
                :dfile => 'sata2.vdi',
                :size => 250, # Megabytes
                :port => 2
            },
            :sata3 => {
                :dfile => 'sata3.vdi',
                :size => 250, # Megabytes
                :port => 3
            },
            :sata4 => {
                :dfile => 'sata4.vdi',
                :size => 250, # Megabytes
                :port => 4
            }
        }
    }
}

Vagrant.configure("2") do |config|
    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|
            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s

            box.vm.provider :virtualbox do |vb|
                vb.name = boxconfig[:vm_name]
                vb.memory = boxconfig[:memory]
                vb.cpus = boxconfig[:cpus]

                vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ] #---------

                boxconfig[:disks].each do |dname, dconf|
                    disk_path =  get_disk_path(dconf[:dfile], vb.name)
                    unless File.exist?(disk_path)
                        vb.customize ['createhd', '--filename', disk_path, '--variant', 'Fixed', '--size', dconf[:size]]
                    end
                    vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', disk_path]
                end
            end

            box.vm.provision "shell", inline: <<-SHELL
				mkdir -p ~root/.ssh
				cp ~vagrant/.ssh/auth* ~root/.ssh
				yum install -y mdadm smartmontools hdparm gdisk
            SHELL
        end
    end
end

# ------------------------------
# Utility methods
# ------------------------------

# Return path for VBoxManage
def get_vboxmanage_path()
    if (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
      vboxmanage_path = "C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe"
    else
      vboxmanage_path = "VBoxManage" # Assume it's in the path on Linux
    end

    return vboxmanage_path
end

# Return full path to disk on VM folder
def get_disk_path(disk_file_name, vm_name)
    vboxmanage_path = get_vboxmanage_path()
    line = `"#{vboxmanage_path}" list systemproperties`.split(/\n/).grep(/Default machine folder/).first
    vb_machine_folder = line.split(':', 2)[1].strip()
    disk_path = File.join(vb_machine_folder, vm_name, disk_file_name)
    return disk_path
end
